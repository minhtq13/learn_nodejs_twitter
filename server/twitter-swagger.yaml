openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: taminh596@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:4000
tags:
  - name: users
    description: Các API liên quan đến người dùng
paths:
  /users/login:
    post:
      tags:
        - users
      summary: Đăng nhập
      description: Đăng nhập vào hệ thống
      operationId: login
      requestBody:
        description: Thông tin đăng nhập
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
        required: true
      responses:
        "200":
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    example: Login sucess
                  result:
                    $ref: "#/components/schemas/SuccessAuthentication"

        "422":
          description: Invalid input
  /users/me:
    get:
      tags:
        - users
      summary: Lấy thông tin user
      description: Lấy thông tin user
      operationId: getMe
      security:
        - BearerAuth: []
      responses:
        default:
          description: Lấy thông tin user thành công
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

components:
  schemas:
    LoginBody:
      type: object
      properties:
        email:
          type: string
          example: taminh596@gmail.com
        password:
          type: string
          example: Minh123@
    SuccessAuthentication:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjVmNDVkN2NiNTc1NDc5YjVmZWRiN2FmIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE3MTA4MzA5NTcsImV4cCI6MTcxMTQzNTc1N30.I-3cv5fRrSwE3OBkNhqu8dsNDHO-hFt9O9djGSt6Npg
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjVmNDVkN2NiNTc1NDc5YjVmZWRiN2FmIiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJpYXQiOjE3MTA4MzA5NTcsImV4cCI6MTcxOTQ3MDk1N30.WiD1CqEnx66JYP3llGakUkqq3_b2lSwiCBnc0SMETE8
    User:
      type: "object"
      properties:
        _id:
          type: string
          format: MongoId
          example: 65f45d7cb575479b5fedb7af
        name:
          type: string
          example: "minh"
        email:
          type: string
          example: "taminh596@gmail.com"
        date_of_birth:
          type: string
          format: ISO8601
          example: 2023-06-08T10:17:31.096Z
        create_at:
          type: string
          format: ISO8601
          example: 2024-03-15T14:38:52.654Z
        updated_at:
          type: string
          format: ISO8601
          example: 2024-03-15T15:12:39.805Z
        verify:
          $ref: "#/components/schemas/UserVerifyStatus"
        twitter_circle:
          type: array
          items:
            type: string
            format: MongoId
          example: ['65f45d7cb575479b5fedb7af']
        bio:
          type: string
          example: "This is my bio."
        location:
          type: string
          example: "San Francisco, CA"
        website:
          type: string
          example: "www.example.com"
        username:
          type: string
          example: "taminh596"
        avatar:
          type: string
          example: "http:localhost:4000/avatar/test.jpg"
        cover_photo:
          type: string
          example: "http:localhost:4000/cover_photo/test.jpg"
    UserVerifyStatus:

      type: number
      enum: [Unverified, Verified, Banned]
      example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT